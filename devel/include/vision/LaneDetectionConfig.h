//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the line_detection_fu package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __line_detection_fu__LANEDETECTIONCONFIG_H__
#define __line_detection_fu__LANEDETECTIONCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace line_detection_fu
{
  class LaneDetectionConfigStatics;

  class LaneDetectionConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(LaneDetectionConfig &config, const LaneDetectionConfig &max, const LaneDetectionConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const LaneDetectionConfig &config1, const LaneDetectionConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, LaneDetectionConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const LaneDetectionConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, LaneDetectionConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const LaneDetectionConfig &config) const = 0;
      virtual void getValue(const LaneDetectionConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T LaneDetectionConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (LaneDetectionConfig::* field);

      virtual void clamp(LaneDetectionConfig &config, const LaneDetectionConfig &max, const LaneDetectionConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const LaneDetectionConfig &config1, const LaneDetectionConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, LaneDetectionConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const LaneDetectionConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, LaneDetectionConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const LaneDetectionConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const LaneDetectionConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, LaneDetectionConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, LaneDetectionConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<LaneDetectionConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(LaneDetectionConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("defaultXLeft"==(*_i)->name){defaultXLeft = boost::any_cast<int>(val);}
        if("defaultXCenter"==(*_i)->name){defaultXCenter = boost::any_cast<int>(val);}
        if("defaultXRight"==(*_i)->name){defaultXRight = boost::any_cast<int>(val);}
        if("interestDistancePoly"==(*_i)->name){interestDistancePoly = boost::any_cast<int>(val);}
        if("interestDistanceDefault"==(*_i)->name){interestDistanceDefault = boost::any_cast<int>(val);}
        if("iterationsRansac"==(*_i)->name){iterationsRansac = boost::any_cast<int>(val);}
        if("maxYRoi"==(*_i)->name){maxYRoi = boost::any_cast<int>(val);}
        if("minYDefaultRoi"==(*_i)->name){minYDefaultRoi = boost::any_cast<int>(val);}
        if("minYPolyRoi"==(*_i)->name){minYPolyRoi = boost::any_cast<int>(val);}
        if("polyY1"==(*_i)->name){polyY1 = boost::any_cast<int>(val);}
        if("polyY2"==(*_i)->name){polyY2 = boost::any_cast<int>(val);}
        if("polyY3"==(*_i)->name){polyY3 = boost::any_cast<int>(val);}
        if("detectLaneStartX"==(*_i)->name){detectLaneStartX = boost::any_cast<int>(val);}
        if("maxAngleDiff"==(*_i)->name){maxAngleDiff = boost::any_cast<int>(val);}
        if("proj_y_start"==(*_i)->name){proj_y_start = boost::any_cast<int>(val);}
        if("roi_top_w"==(*_i)->name){roi_top_w = boost::any_cast<int>(val);}
        if("roi_bottom_w"==(*_i)->name){roi_bottom_w = boost::any_cast<int>(val);}
        if("proportionThreshould"==(*_i)->name){proportionThreshould = boost::any_cast<double>(val);}
        if("m_gradientThreshold"==(*_i)->name){m_gradientThreshold = boost::any_cast<int>(val);}
        if("m_nonMaxWidth"==(*_i)->name){m_nonMaxWidth = boost::any_cast<int>(val);}
        if("laneMarkingSquaredThreshold"==(*_i)->name){laneMarkingSquaredThreshold = boost::any_cast<int>(val);}
        if("angleAdjacentLeg"==(*_i)->name){angleAdjacentLeg = boost::any_cast<int>(val);}
        if("scanlinesVerticalDistance"==(*_i)->name){scanlinesVerticalDistance = boost::any_cast<int>(val);}
        if("scanlinesMaxCount"==(*_i)->name){scanlinesMaxCount = boost::any_cast<int>(val);}
      }
    }

    int defaultXLeft;
int defaultXCenter;
int defaultXRight;
int interestDistancePoly;
int interestDistanceDefault;
int iterationsRansac;
int maxYRoi;
int minYDefaultRoi;
int minYPolyRoi;
int polyY1;
int polyY2;
int polyY3;
int detectLaneStartX;
int maxAngleDiff;
int proj_y_start;
int roi_top_w;
int roi_bottom_w;
double proportionThreshould;
int m_gradientThreshold;
int m_nonMaxWidth;
int laneMarkingSquaredThreshold;
int angleAdjacentLeg;
int scanlinesVerticalDistance;
int scanlinesMaxCount;

    bool state;
    std::string name;

    
}groups;



//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int defaultXLeft;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int defaultXCenter;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int defaultXRight;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int interestDistancePoly;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int interestDistanceDefault;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int iterationsRansac;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int maxYRoi;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int minYDefaultRoi;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int minYPolyRoi;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int polyY1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int polyY2;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int polyY3;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int detectLaneStartX;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int maxAngleDiff;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int proj_y_start;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_top_w;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int roi_bottom_w;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double proportionThreshould;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int m_gradientThreshold;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int m_nonMaxWidth;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int laneMarkingSquaredThreshold;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int angleAdjacentLeg;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int scanlinesVerticalDistance;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int scanlinesMaxCount;
//#line 218 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("LaneDetectionConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const LaneDetectionConfig &__max__ = __getMax__();
      const LaneDetectionConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const LaneDetectionConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const LaneDetectionConfig &__getDefault__();
    static const LaneDetectionConfig &__getMax__();
    static const LaneDetectionConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const LaneDetectionConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void LaneDetectionConfig::ParamDescription<std::string>::clamp(LaneDetectionConfig &config, const LaneDetectionConfig &max, const LaneDetectionConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class LaneDetectionConfigStatics
  {
    friend class LaneDetectionConfig;

    LaneDetectionConfigStatics()
    {
LaneDetectionConfig::GroupDescription<LaneDetectionConfig::DEFAULT, LaneDetectionConfig> Default("Default", "", 0, 0, true, &LaneDetectionConfig::groups);
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.defaultXLeft = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.defaultXLeft = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.defaultXLeft = 20;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXLeft", "int", 0, "LEFT lane border position", "", &LaneDetectionConfig::defaultXLeft)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXLeft", "int", 0, "LEFT lane border position", "", &LaneDetectionConfig::defaultXLeft)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.defaultXCenter = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.defaultXCenter = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.defaultXCenter = 60;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXCenter", "int", 0, "CENTER lane border position", "", &LaneDetectionConfig::defaultXCenter)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXCenter", "int", 0, "CENTER lane border position", "", &LaneDetectionConfig::defaultXCenter)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.defaultXRight = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.defaultXRight = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.defaultXRight = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXRight", "int", 0, "RIGHT lane border position", "", &LaneDetectionConfig::defaultXRight)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("defaultXRight", "int", 0, "RIGHT lane border position", "", &LaneDetectionConfig::defaultXRight)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interestDistancePoly = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interestDistancePoly = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interestDistancePoly = 5;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("interestDistancePoly", "int", 0, "interestDistancePoly - to previous poly", "", &LaneDetectionConfig::interestDistancePoly)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("interestDistancePoly", "int", 0, "interestDistancePoly - to previous poly", "", &LaneDetectionConfig::interestDistancePoly)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.interestDistanceDefault = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.interestDistanceDefault = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.interestDistanceDefault = 20;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("interestDistanceDefault", "int", 0, "interestDistanceDefault - to default lines", "", &LaneDetectionConfig::interestDistanceDefault)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("interestDistanceDefault", "int", 0, "interestDistanceDefault - to default lines", "", &LaneDetectionConfig::interestDistanceDefault)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.iterationsRansac = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.iterationsRansac = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.iterationsRansac = 30;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("iterationsRansac", "int", 0, "iterationsRansac", "", &LaneDetectionConfig::iterationsRansac)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("iterationsRansac", "int", 0, "iterationsRansac", "", &LaneDetectionConfig::iterationsRansac)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.maxYRoi = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.maxYRoi = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.maxYRoi = 159;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("maxYRoi", "int", 0, "max Y roi", "", &LaneDetectionConfig::maxYRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("maxYRoi", "int", 0, "max Y roi", "", &LaneDetectionConfig::maxYRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.minYDefaultRoi = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.minYDefaultRoi = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.minYDefaultRoi = 110;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("minYDefaultRoi", "int", 0, "min Y default roi", "", &LaneDetectionConfig::minYDefaultRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("minYDefaultRoi", "int", 0, "min Y default roi", "", &LaneDetectionConfig::minYDefaultRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.minYPolyRoi = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.minYPolyRoi = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.minYPolyRoi = 50;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("minYPolyRoi", "int", 0, "min Y poly roi", "", &LaneDetectionConfig::minYPolyRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("minYPolyRoi", "int", 0, "min Y poly roi", "", &LaneDetectionConfig::minYPolyRoi)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.polyY1 = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.polyY1 = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.polyY1 = 155;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY1", "int", 0, "Y of first point for generating lane poly", "", &LaneDetectionConfig::polyY1)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY1", "int", 0, "Y of first point for generating lane poly", "", &LaneDetectionConfig::polyY1)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.polyY2 = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.polyY2 = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.polyY2 = 145;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY2", "int", 0, "Y of second point for generating lane poly", "", &LaneDetectionConfig::polyY2)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY2", "int", 0, "Y of second point for generating lane poly", "", &LaneDetectionConfig::polyY2)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.polyY3 = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.polyY3 = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.polyY3 = 130;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY3", "int", 0, "Y of third point for generating lane poly", "", &LaneDetectionConfig::polyY3)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("polyY3", "int", 0, "Y of third point for generating lane poly", "", &LaneDetectionConfig::polyY3)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.detectLaneStartX = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.detectLaneStartX = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.detectLaneStartX = 155;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("detectLaneStartX", "int", 0, "beginning point for gradients etc", "", &LaneDetectionConfig::detectLaneStartX)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("detectLaneStartX", "int", 0, "beginning point for gradients etc", "", &LaneDetectionConfig::detectLaneStartX)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.maxAngleDiff = 1;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.maxAngleDiff = 999;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.maxAngleDiff = 999;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("maxAngleDiff", "int", 0, "maxAngleDiff - optional smoothing when angle diff larger than this", "", &LaneDetectionConfig::maxAngleDiff)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("maxAngleDiff", "int", 0, "maxAngleDiff - optional smoothing when angle diff larger than this", "", &LaneDetectionConfig::maxAngleDiff)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.proj_y_start = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.proj_y_start = 80;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.proj_y_start = 50;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("proj_y_start", "int", 0, "Y position of processed window inside of IPmapped img", "", &LaneDetectionConfig::proj_y_start)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("proj_y_start", "int", 0, "Y position of processed window inside of IPmapped img", "", &LaneDetectionConfig::proj_y_start)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_top_w = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_top_w = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_top_w = 70;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("roi_top_w", "int", 0, "roi_top_width", "", &LaneDetectionConfig::roi_top_w)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("roi_top_w", "int", 0, "roi_top_width", "", &LaneDetectionConfig::roi_top_w)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.roi_bottom_w = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.roi_bottom_w = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.roi_bottom_w = 70;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("roi_bottom_w", "int", 0, "roi_bottom_width", "", &LaneDetectionConfig::roi_bottom_w)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("roi_bottom_w", "int", 0, "roi_bottom_width", "", &LaneDetectionConfig::roi_bottom_w)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.proportionThreshould = 0.0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.proportionThreshould = 1.0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.proportionThreshould = 0.6;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<double>("proportionThreshould", "double", 0, "supporter proportionThreshould", "", &LaneDetectionConfig::proportionThreshould)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<double>("proportionThreshould", "double", 0, "supporter proportionThreshould", "", &LaneDetectionConfig::proportionThreshould)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.m_gradientThreshold = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.m_gradientThreshold = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.m_gradientThreshold = 10;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("m_gradientThreshold", "int", 0, "m_gradientThreshold", "", &LaneDetectionConfig::m_gradientThreshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("m_gradientThreshold", "int", 0, "m_gradientThreshold", "", &LaneDetectionConfig::m_gradientThreshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.m_nonMaxWidth = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.m_nonMaxWidth = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.m_nonMaxWidth = 10;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("m_nonMaxWidth", "int", 0, "m_nonMaxWidth", "", &LaneDetectionConfig::m_nonMaxWidth)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("m_nonMaxWidth", "int", 0, "m_nonMaxWidth", "", &LaneDetectionConfig::m_nonMaxWidth)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.laneMarkingSquaredThreshold = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.laneMarkingSquaredThreshold = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.laneMarkingSquaredThreshold = 36;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("laneMarkingSquaredThreshold", "int", 0, "laneMarkingSquaredThreshold", "", &LaneDetectionConfig::laneMarkingSquaredThreshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("laneMarkingSquaredThreshold", "int", 0, "laneMarkingSquaredThreshold", "", &LaneDetectionConfig::laneMarkingSquaredThreshold)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.angleAdjacentLeg = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.angleAdjacentLeg = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.angleAdjacentLeg = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("angleAdjacentLeg", "int", 0, "-Y position of where the angle of polynomial is computed", "", &LaneDetectionConfig::angleAdjacentLeg)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("angleAdjacentLeg", "int", 0, "-Y position of where the angle of polynomial is computed", "", &LaneDetectionConfig::angleAdjacentLeg)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scanlinesVerticalDistance = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scanlinesVerticalDistance = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scanlinesVerticalDistance = 2;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("scanlinesVerticalDistance", "int", 0, "scanlinesVerticalDistance", "", &LaneDetectionConfig::scanlinesVerticalDistance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("scanlinesVerticalDistance", "int", 0, "scanlinesVerticalDistance", "", &LaneDetectionConfig::scanlinesVerticalDistance)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scanlinesMaxCount = 0;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scanlinesMaxCount = 160;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scanlinesMaxCount = 100;
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("scanlinesMaxCount", "int", 0, "scanlinesMaxCount", "", &LaneDetectionConfig::scanlinesMaxCount)));
//#line 292 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(LaneDetectionConfig::AbstractParamDescriptionConstPtr(new LaneDetectionConfig::ParamDescription<int>("scanlinesMaxCount", "int", 0, "scanlinesMaxCount", "", &LaneDetectionConfig::scanlinesMaxCount)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(LaneDetectionConfig::AbstractGroupDescriptionConstPtr(new LaneDetectionConfig::GroupDescription<LaneDetectionConfig::DEFAULT, LaneDetectionConfig>(Default)));
//#line 356 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<LaneDetectionConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<LaneDetectionConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<LaneDetectionConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    LaneDetectionConfig __max__;
    LaneDetectionConfig __min__;
    LaneDetectionConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const LaneDetectionConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static LaneDetectionConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &LaneDetectionConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const LaneDetectionConfig &LaneDetectionConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const LaneDetectionConfig &LaneDetectionConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const LaneDetectionConfig &LaneDetectionConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<LaneDetectionConfig::AbstractParamDescriptionConstPtr> &LaneDetectionConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<LaneDetectionConfig::AbstractGroupDescriptionConstPtr> &LaneDetectionConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const LaneDetectionConfigStatics *LaneDetectionConfig::__get_statics__()
  {
    const static LaneDetectionConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = LaneDetectionConfigStatics::get_instance();

    return statics;
  }


}

#endif // __LANEDETECTIONRECONFIGURATOR_H__
